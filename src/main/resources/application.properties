spring.application.name=whatappClone
server.port=${PORT}
spring.datasource.url=jdbc:postgresql://${ETH_0}:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=${PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Logging dettagliato per Spring Security
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web.cors=DEBUG
#impostazioni su quali tipi di errori saranno visibili dei log
logging.level.org.springframework.web=debug
logging.level.org.hibernate=error
#file nel quale i log verranno scritti
logging.file.name=./logging/application.log
# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:${PORT}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=email,profile
#configurazioni per collegarsi al server smtp di google per linvio e ricezione email tramite applicazione
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=puzzapp.assistenza@gmail.com
spring.mail.password=${PASSWORD_SMTP_EMAIL}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com


